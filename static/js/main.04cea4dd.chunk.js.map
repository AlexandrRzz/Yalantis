{"version":3,"sources":["utils/store.js","services/employees-service.js","components/employeesCard/employeesCard.js","components/employeesCards/employeesCards.js","components/selectedEmployeesCard/selectedEmployeesCard.js","components/selectedEmployeesCards/selectedEmployeesCards.js","components/employees/employees.js","App.js","reportWebVitals.js","index.js"],"names":["StoreContext","React","createContext","Store","children","useState","employees","setEmployees","initialSelected","selectedFromCookies","Cookies","get","JSON","parse","initialState","selected","setSelected","store","loading","Provider","value","EmployeesSeervice","_apiBase","url","fetch","this","res","ok","Error","status","json","getResource","EmployeesCard","header","employeList","useContext","useEffect","set","stringify","arr","className","length","map","id","firstName","lastName","type","checked","indexOf","onChange","prevSelected","idx","slice","togleEmploye","EmployeesCards","groupEmployes","reduce","employe","firstLetter","push","employeesCardsList","i","letter","String","fromCharCode","SelectedEmployeesCard","dob","monthNames","formatDate","date","day","getDate","month","getMonth","year","getFullYear","SelectedEmployeesCards","selEmpl","empl","resArr","forEach","idxEmployee","findIndex","employeItem","employeItemDOB","Date","found","find","el","employeItemWithFormatedDOB","groupSelectedEmployesByMonth","sort","a","b","c","d","group","Employees","setLoading","getEmployees","then","employeesData","sortedEmployees","empl1","empl2","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.04cea4dd.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport Cookies from \"js-cookie\";\n\nexport const StoreContext = React.createContext(null);\n\nconst Store = ({ children }) => {\n  const initialState = () => {\n    let initialSelected = [];\n    const selectedFromCookies = Cookies.get(\"employees\");\n    if (selectedFromCookies) {\n      initialSelected = JSON.parse(selectedFromCookies);\n    }\n    return initialSelected;\n  };\n\n  const [employees, setEmployees] = useState([]);\n  const [selected, setSelected] = useState(initialState());\n  const [loading, setLoading] = useState(true);\n\n  const store = {\n    employees: [employees, setEmployees],\n    selected: [selected, setSelected],\n    loading: [loading, setLoading],\n  };\n\n  return (\n    <StoreContext.Provider value={store}>{children}</StoreContext.Provider>\n  );\n};\n\nexport default Store;\n","export default class EmployeesSeervice {\n  _apiBase = 'https://yalantis-react-school-api.yalantis.com/api';\n\n  async getResource(url) {\n    const res = await fetch(`${this._apiBase}${url}`);\n    if (!res.ok) {\n      throw new Error(`Could not fetch ${url}, recived ${res.status} `)\n    }\n    return await res.json();\n  }\n\n  async getEmployees() {\n    return this.getResource(`/task0/users`);\n  }\n}\n\n\n\n\n","import { StoreContext } from \"./../../utils/store\";\nimport { useContext, useEffect } from \"react\";\nimport Cookies from \"js-cookie\";\nimport \"./employeesCard.css\";\nexport default function EmployeesCard({ header, employeList = [] }) {\n  const {\n    selected: [selected, setSelected],\n  } = useContext(StoreContext);\n\n  useEffect(() => {\n    Cookies.set(\"employees\", JSON.stringify(selected));\n  }, [selected]);\n\n  const togleEmploye = (id) => {\n    setSelected((prevSelected) => {\n      const idx = prevSelected.indexOf(id);\n      const newSelectedEmployees =\n        idx >= 0\n          ? [...prevSelected.slice(0, idx), ...prevSelected.slice(idx + 1)]\n          : [...prevSelected, id];\n      return newSelectedEmployees;\n    });\n  };\n\n  const renderItems = (arr) => {\n    if (arr.length === 0) {\n      return <li>---</li>;\n    }\n    return arr.map(({ id, firstName, lastName }) => {\n      return (\n        <li key={id}>\n          {lastName} {firstName}\n          <input\n            type=\"checkbox\"\n            checked={selected.indexOf(id) >= 0}\n            onChange={() => togleEmploye(id)}\n          ></input>\n        </li>\n      );\n    });\n  };\n  return (\n    <div className=\"employeesCard\">\n      <h3>{header}</h3>\n      <ul className=\"employeesCard__items\">{renderItems(employeList)}</ul>\n    </div>\n  );\n}\n","import { StoreContext } from \"./../../utils/store\";\nimport { useContext } from \"react\";\nimport EmployeesCard from \"./../employeesCard/employeesCard\";\nimport \"./employeesCards.css\";\nfunction groupEmployesByAlphabet(empl) {\n  const resObj = empl.reduce((res, employe) => {\n    const firstLetter = employe.lastName[0];\n    if (!res[firstLetter]) {\n      res[firstLetter] = [employe];\n    } else {\n      res[firstLetter].push(employe);\n    }\n    return res;\n  }, {});\n  return resObj;\n}\n\nexport default function EmployeesCards({ togleEmploye }) {\n  const {\n    employees: [employees],\n  } = useContext(StoreContext);\n\n  const groupEmployes = groupEmployesByAlphabet(employees);\n  const employeesCardsList = [];\n\n  for (let i = 65; i < 91; i++) {\n    const letter = String.fromCharCode(i);\n    employeesCardsList.push(\n      <EmployeesCard\n        key={letter}\n        header={letter}\n        employeList={groupEmployes[letter]}\n      />\n    );\n  }\n\n  return (\n    <div className=\"employeesCards\">\n      <h2>â€‹Employees</h2>\n      <div className=\"employeesCards__cards\">{employeesCardsList}</div>\n    </div>\n  );\n}\n","export default function SelectedEmployeesCard({ header, employeList = [] }) {\n  function renderItems(arr) {\n    if (arr.length === 0) {\n      return <li>---</li>;\n    }\n    return arr.map(({ id, firstName, lastName, dob }) => {\n      return (\n        <li key={id}>\n          {lastName} {firstName} - {dob}\n        </li>\n      );\n    });\n  }\n  return (\n    <div>\n      <h3>{header}</h3>\n      <ul>{renderItems(employeList)}</ul>\n    </div>\n  );\n}\n","import { StoreContext } from \"./../../utils/store\";\nimport { useContext } from \"react\";\nimport SelectedEmployeesCard from \"../selectedEmployeesCard/selectedEmployeesCard\";\nimport \"./selectedEmployeesCards.css\";\n\nconst monthNames = [\n  \"January\",\n  \"February\",\n  \"March\",\n  \"April\",\n  \"May\",\n  \"June\",\n  \"July\",\n  \"August\",\n  \"September\",\n  \"October\",\n  \"November\",\n  \"December\",\n];\n\nfunction formatDate(date) {\n  const day = date.getDate();\n  const month = monthNames[date.getMonth()];\n  const year = date.getFullYear();\n  return `${day} ${month}, ${year} year`;\n}\n\nfunction groupSelectedEmployesByMonth(selEmpl, empl) {\n  const resArr = [];\n  selEmpl.forEach((employe) => {\n    const idxEmployee = empl.findIndex((empl) => empl.id === employe);\n    if (idxEmployee >= 0) {\n      const employeItem = empl[idxEmployee];\n      const employeItemDOB = new Date(employeItem.dob);\n      const month = employeItemDOB.getMonth();\n      const found = resArr.find((el) => el.month === month);\n      const employeItemWithFormatedDOB = {\n        ...employeItem,\n        dob: formatDate(employeItemDOB),\n      };\n      if (found) {\n        found.employees.push(employeItemWithFormatedDOB);\n      } else {\n        resArr.push({\n          month: month,\n          employees: [employeItemWithFormatedDOB],\n        });\n      }\n    }\n  });\n  return resArr;\n}\n\nfunction sortByMonthAndLastName(arr) {\n  return [...arr.sort((a, b) => a.month - b.month)].map((el) => {\n    return {\n      ...el,\n      employees: el.employees.sort((c, d) => {\n        return c.lastName > d.lastName ? 1 : -1;\n      }),\n    };\n  });\n}\n\nexport default function SelectedEmployeesCards() {\n  const {\n    employees: [employees],\n    selected: [selected],\n  } = useContext(StoreContext);\n\n  let employeesCardsList = <h3>No selected employees</h3>;\n\n  if (selected.length > 0) {\n    const groupEmployes = sortByMonthAndLastName(\n      groupSelectedEmployesByMonth(selected, employees)\n    );\n\n    employeesCardsList = groupEmployes.map((group) => {\n      return (\n        <SelectedEmployeesCard\n          key={group.month}\n          header={monthNames[group.month]}\n          employeList={group.employees}\n        />\n      );\n    });\n  }\n\n  return (\n    <div className=\"selectedEmployeesCards\">\n      <h2>â€‹Employees birthday</h2>\n      {employeesCardsList}\n    </div>\n  );\n}\n","import { useEffect, useContext } from \"react\";\nimport { StoreContext } from \"./../../utils/store\";\nimport EmployeesSeervice from \"./../../services/employees-service\";\nimport EmployeesCards from \"./../employeesCards/employeesCards\";\nimport SelectedEmployeesCards from \"../selectedEmployeesCards/selectedEmployeesCards\";\nimport \"./employees.css\";\n\nexport default function Employees() {\n  const {\n    employees: [, setEmployees],\n    loading: [loading, setLoading],\n  } = useContext(StoreContext);\n\n  useEffect(() => {\n    const emplServ = new EmployeesSeervice();\n    emplServ.getEmployees().then((employeesData) => {\n      const sortedEmployees = [...employeesData].sort((empl1, empl2) =>\n        empl1.lastName > empl2.lastName ? 1 : -1\n      );\n      setEmployees(sortedEmployees);\n      setLoading(false);\n    });\n  }, []);\n\n  return (\n    <div className=\"employees\">\n      {loading ? (\n        <p>Loading...</p>\n      ) : (\n        <div className=\"employees__wrapper\">\n          <EmployeesCards />\n          <SelectedEmployeesCards />\n        </div>\n      )}\n    </div>\n  );\n}\n","import Employees from \"./components/employees/employees\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Employees />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport StoreProvider from \"./utils/store\";\nReactDOM.render(\n  <React.StrictMode>\n    <StoreProvider>\n      <App />\n    </StoreProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}